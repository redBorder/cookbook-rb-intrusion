<%####################################################################### %>
<%# Copyright (c) 2014 ENEO TecnologÃ­a S.L. %>
<%# This file is part of redBorder. %>
<%# redBorder is free software: you can redistribute it and/or modify %>
<%# it under the terms of the GNU Affero General Public License License as published by %>
<%# the Free Software Foundation, either version 3 of the License, or %>
<%# (at your option) any later version. %>
<%# redBorder is distributed in the hope that it will be useful, %>
<%# but WITHOUT ANY WARRANTY; without even the implied warranty of %>
<%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the %>
<%# GNU Affero General Public License License for more details. %>
<%# You should have received a copy of the GNU Affero General Public License License %>
<%# along with redBorder. If not, see <http://www.gnu.org/licenses/>. %>
<%####################################################################### %>
#!/bin/bash

DEBUG=0
WATCHDOG_NAME="watchdog_020-check-snort3"
SNORT3_DIR="/etc/snort"

[ $DEBUG -eq 1 ] && set -x && exec 2>&1

f_log() {
    logger -t "$WATCHDOG_NAME" "$1"
}

f_get_env_value() {
    local file=$1
    local key=$2
    grep -E "^${key}=" "$file" | cut -d= -f2 | tr -d '"'
}

f_set_bypass_segment() {
    #################################
    # Table of states
    #
    # mode        | bypass | bridge |
    # ------------------------------|
    # IPS         | on     | up     |
    # IDS         | on     | up     |
    # ------------------------------|
    #
    #################################
    ifbr=$1
    bpbr_mode="on"

    echo "${ifbr}" | egrep -q "^bpbr[0-9]*$"
    if [ $? -eq 0 ]; then
        /usr/lib/redborder/bin/rb_bypass.sh -b ${ifbr} -s ${bpbr_mode} &>/dev/null
    fi
}

f_iface_to_segment() {
    local iface=$1
    ip link show "$iface" 2>/dev/null | grep -oP 'master \K\S+'
}

f_check_snort3() {
    local ret=0
    for envfile in "$SNORT3_DIR"/*/env; do
        [ -f "$envfile" ] || continue
        local instance
        instance=$(basename "$(dirname "$envfile")")
        if ! systemctl is-active --quiet "snort3@$instance"; then
            f_log "Snort3 instance $instance is NOT active"
            ret=100
        fi
    done
    return $ret
}

f_restore_snort3() {
    local code=$1
    [ "$code" -ne 100 ] && return 0

    for envfile in "$SNORT3_DIR"/*/env; do
        [ -f "$envfile" ] || continue
        local instance
        instance=$(basename "$(dirname "$envfile")")

        if ! systemctl is-active --quiet "snort3@$instance"; then
            local IFACE
            IFACE=$(f_get_env_value "$envfile" "IFACE")

            f_log "Restoring snort3@$instance: enabling bypass on interfaces: $IFACE"

            local segments=""
            for iface in $(echo "$IFACE" | tr ':' ' '); do
                local seg
                seg=$(f_iface_to_segment "$iface")
                if [ -n "$seg" ]; then
                    f_log "$iface belongs to segment $seg"
                    segments="$segments $seg"
                else
                    f_log "WARNING: Could not find segment for interface $iface"
                fi
            done

            segments=$(echo "$segments" | tr ' ' '\n' | sort -u | tr '\n' ' ')

            for seg in $segments; do
                f_log "Enabling bypass on segment $seg"
                f_set_bypass_segment "$seg"
            done

            f_log "Restarting snort3@$instance"
            systemctl restart "snort3@$instance"
        fi
    done
    return 0
}

global_ret=0

if [[ "$1" == "test" || -z "$1" ]]; then
    f_check_snort3
    global_ret=$?
else
    f_restore_snort3 "$2"
    global_ret=0
fi

exit $global_ret
